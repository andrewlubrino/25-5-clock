{"version":3,"sources":["App.js","index.js"],"names":["timerVar","Timer","React","Component","constructor","props","super","timerFunc","this","setState","time","state","handleStart","setInterval","handlePause","clearInterval","reset","setTime","increaseOrDecrease","tof","name","tempVar","Math","floor","setBreak","breakSwitch","componentDidUpdate","render","Minutes","Seconds","toString","padStart","className","Name","setValue","callBack","onClick","icon","faPlay","faPause","faRedo","Change","onUpPress","onDownPress","faAngleDoubleUp","faAngleDoubleDown","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.836c1df8.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleDoubleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleDoubleUp } from \"@fortawesome/free-solid-svg-icons\";\n\nvar timerVar = null;\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 1500000,\n      breakSwitch: true,\n      setTime: 1500000,\n      setBreak: 300000\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.time === 0) {\n      if (this.state.breakSwitch) {\n        this.setState({\n          time: this.state.setBreak,\n          breakSwitch: !this.state.breakSwitch\n        });\n      } else {\n        this.setState({\n          time: this.state.setTime,\n          breakSwitch: !this.state.breakSwitch\n        });\n      }\n    }\n  }\n\n  timerFunc = () => {\n    let increment = 1000;\n    this.setState({\n      time: this.state.time - increment\n    });\n  };\n\n  handleStart = () => {\n    timerVar = setInterval(this.timerFunc, 1000);\n  };\n\n  handlePause = () => {\n    clearInterval(timerVar);\n  };\n\n  reset = () => {\n    this.setState({\n      time: this.state.setTime\n    });\n  };\n\n  increaseOrDecrease = (tof, name) => {\n    this.handlePause();\n    if (tof) {\n      if (name === \"work\") {\n        let tempVar = Math.floor((this.state.setTime + 60000) / 60000);\n        if (tempVar > 0 && tempVar <= 60) {\n          this.setState({\n            setTime: this.state.setTime + 60000\n          });\n        }\n      } else {\n        let tempVar = Math.floor((this.state.setBreak + 60000) / 60000);\n        if (tempVar > 0 && tempVar <= 60) {\n          this.setState({\n            setBreak: this.state.setBreak + 60000\n          });\n        }\n      }\n    } else {\n      if (name === \"work\") {\n        let tempVar = Math.floor((this.state.setTime - 60000) / 60000);\n        if (tempVar > 0 && tempVar <= 60) {\n          this.setState({\n            setTime: this.state.setTime - 60000\n          });\n        }\n      } else {\n        let tempVar = Math.floor((this.state.setBreak - 60000) / 60000);\n        if (tempVar > 0 && tempVar <= 60) {\n          this.setState({\n            setBreak: this.state.setBreak - 60000\n          });\n        }\n      }\n    }\n  };\n\n  render() {\n    var Minutes = Math.floor(this.state.time / (60 * 1000));\n    var Seconds = (this.state.time % (60 * 1000)) / 1000;\n    Seconds = Seconds.toString().padStart(2, \"0\");\n    return (\n      <div className=\"body-class\">\n        <div>\n          <div>\n            <div className=\"button-order\">\n              <Change\n                Name=\"work\"\n                setValue={this.state.setTime}\n                callBack={this.increaseOrDecrease}\n              />\n              <Change\n                Name=\"break\"\n                setValue={this.state.setBreak}\n                callBack={this.increaseOrDecrease}\n              />\n            </div>\n          </div>\n          <div className=\"timer-style\">\n            <div>\n              <h1>\n                {Minutes}:{Seconds}\n              </h1>\n              <button className=\"button-style\" onClick={this.handleStart}>\n                <FontAwesomeIcon icon={faPlay} />\n              </button>\n              <button className=\"button-style\" onClick={this.handlePause}>\n                <FontAwesomeIcon icon={faPause} />\n              </button>\n              <button className=\"button-style\" onClick={this.reset}>\n                <FontAwesomeIcon icon={faRedo} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Change extends React.Component {\n  onUpPress = () => {\n    this.props.callBack(true, this.props.Name);\n  };\n\n  onDownPress = () => {\n    this.props.callBack(false, this.props.Name);\n  };\n\n  render() {\n    var Minutes = Math.floor(this.props.setValue / (60 * 1000));\n    return (\n      <div className=\"change-element-style\">\n        <h1>{Minutes}</h1>\n        <div className=\"change-button-style\">\n          <button className=\"button-style\" onClick={this.onUpPress}>\n            <FontAwesomeIcon icon={faAngleDoubleUp} />\n          </button>\n          <button className=\"button-style\" onClick={this.onDownPress}>\n            <FontAwesomeIcon icon={faAngleDoubleDown} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Timer from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Timer />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}